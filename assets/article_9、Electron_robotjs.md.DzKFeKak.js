import{_ as s,c as i,o as a,a3 as n}from"./chunks/framework.O95JGkcW.js";const g=JSON.parse('{"title":"一、安装robotjs","description":"","frontmatter":{},"headers":[],"relativePath":"article/9、Electron/robotjs.md","filePath":"article/9、Electron/robotjs.md","lastUpdated":1723097831000}'),t={name:"article/9、Electron/robotjs.md"},e=n(`<p>robotjs在electron中使用</p><p>robotjs官网：<a href="https://robotjs.io/" target="_blank" rel="noreferrer">https://robotjs.io/</a></p><h1 id="一、安装robotjs" tabindex="-1">一、安装robotjs <a class="header-anchor" href="#一、安装robotjs" aria-label="Permalink to &quot;一、安装robotjs&quot;">​</a></h1><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>npm install robotjs</span></span></code></pre></div><h1 id="二、使用" tabindex="-1">二、使用 <a class="header-anchor" href="#二、使用" aria-label="Permalink to &quot;二、使用&quot;">​</a></h1><p>由于robotjs是c++编写的原生库，而且NPM 包中并没有包含预构建的二进制文件，所以在使用的时候需要根据不同的平台进行重新编译，否则安装完，直接使用会报错，如下：</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">App threw an error during load</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Error: The module &#39;\\\\?\\D:\\work\\test\\electron-vite-test\\node_modules\\robotjs\\build\\Release\\robotjs.node&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">was compiled against a different Node.js version using</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">NODE_MODULE_VERSION </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">108</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">. This version of Node.js requires</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">NODE_MODULE_VERSION </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">119</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">. Please try re-compiling or re-installing</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">the module (for instance, using \`npm rebuild\` or \`npm install\`).</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    at process.func [</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">as</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> dlopen</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] (node:electron/js</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">c/node_init:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2214</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    at Module._extensions..node (node:internal/modules/cjs/loader:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1356</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">18</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    at Object.func [</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">as</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> .node</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] (node:electron/js</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">c/node_init:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2214</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    at Module.load (node:internal/modules/cjs/loader:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1126</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">32</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    at Module._load (node:internal/modules/cjs/loader:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">967</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">12</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    at c._load (node:electron/js</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">c/node_init:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">13672</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    at Module.require (node:internal/modules/cjs/loader:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1150</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">19</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    at require (node:internal/modules/cjs/helpers:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">119</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">18</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    at Object.&lt;anonymous&gt; (D:\\work\\test\\electron-vite-test\\node_modules\\robotjs\\index.js:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">15</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    at Module._compile (node:internal/modules/cjs/loader:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1271</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">14</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>注：编译需要的环境（node-gyp 10.1.0、python 3.11.3、Visual Studio Installer 2022（Visual Studio 生成工具））</p><p>1、全局安装node-gyp</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">npm install -g node-gyp</span></span></code></pre></div><p>2、项目中安装@electron/rebuild</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">npm install -D @electron/rebuild</span></span></code></pre></div><p>package.json中添加命令</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;scripts&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;rebuild&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;electron-rebuild&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span></code></pre></div><p>运行 npm run rebuild ,此时会根据项目中的electron版本及其对应的node-abi版本进行编译。（node-abi查询参考 三、关于如何查看node-abi版本） （如果不想根据安装好的electron版本编译，可以直接使用如下命令）</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span># npm rebuild --runtime=electron --target=&lt;你的electron版本&gt; --disturl=https://atom.io/download/atom-shell --abi=&lt;对应abi版本&gt;</span></span>
<span class="line"><span># 编译electron 26版本的（之前测过可以，后面重装系统后编译环境的各版本不太一样，没有成功）</span></span>
<span class="line"><span>npm rebuild --runtime=electron --target=26.6.10 --disturl=https://atom.io/download/atom-shell --abi=110</span></span></code></pre></div><p>生成的二进制文件在node_modules/robotjs/bin中</p><p>记录该笔记时，最高可编译到electron的26.x版本，27及以上的electron版本无法获取到对应的node-abi版本，在执行编译的时候会报错</p><h1 id="三、关于如何查看node-abi版本" tabindex="-1">三、关于如何查看node-abi版本 <a class="header-anchor" href="#三、关于如何查看node-abi版本" aria-label="Permalink to &quot;三、关于如何查看node-abi版本&quot;">​</a></h1><p>1、<a href="https://www.npmjs.com/package/node-abi" target="_blank" rel="noreferrer">https://www.npmjs.com/package/node-abi</a></p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">npm i node-abi -D</span></span></code></pre></div><p>2、getAbi.js</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">const nodeAbi = require(&#39;node-abi&#39;);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 获取electron@16.2.8版本对应的node-abi</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.log(nodeAbi.getAbi(&#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">16.2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&#39;, &#39;electron&#39;), &#39;electron v</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">16.2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&#39;)</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 99</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 获取electron@22.3.27版本对应的node-abi</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.log(nodeAbi.getAbi(&#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">22.3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">27</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&#39;, &#39;electron&#39;), &#39;electron v</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">22.3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">27</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&#39;)</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//110</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// console.log(nodeAbi.getAbi(&#39;27.3.11&#39;, &#39;electron&#39;), &#39;electron v27.3.11&#39;)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// console.log(nodeAbi.getAbi(&#39;28.3.1&#39;, &#39;electron&#39;), &#39;electron v28.3.1&#39;)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// console.log(nodeAbi.getAbi(&#39;29.4.0&#39;, &#39;electron&#39;), &#39;electron v29.4.0&#39;)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// console.log(nodeAbi.getAbi(&#39;30.0.2&#39;, &#39;electron&#39;), &#39;electron v30.0.2&#39;)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 获取指定node-abi版本支持的electron版本</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.log(nodeAbi.getTarget(&#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">110</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&#39;,&#39;electron&#39;), &#39;electron abi</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">-110</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&#39;)</span></span></code></pre></div><p>3、执行脚本</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">node ./getAbi.js</span></span></code></pre></div>`,25),l=[e];function p(h,k,o,r,d,E){return a(),i("div",null,l)}const y=s(t,[["render",p]]);export{g as __pageData,y as default};
